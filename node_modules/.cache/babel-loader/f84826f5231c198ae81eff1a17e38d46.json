{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benna\\\\Desktop\\\\Thinkful Homework\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  let focusDuration = 25;\n  let breakDuration = 5;\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    } // will add the update here happens every second\n\n\n    setSession();\n    focusDuration = focusDuration;\n    breakDuration = breakDuration;\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  const calculatePercentage = () => {\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      return (session === null || session === void 0 ? void 0 : session.timeRemaining) / (focusDuration * 60);\n    } else {\n      return (session === null || session === void 0 ? void 0 : session.timeRemaining) / (breakDuration * 60);\n    }\n  };\n\n  const decreaseFocus = event => {\n    event.preventDefault();\n\n    if (focusDuration > 5) {\n      focusDuration -= 5;\n    }\n  };\n\n  const increaseFocus = event => {\n    event.preventDefault();\n\n    if (focusDuration < 60) {\n      focusDuration += 5;\n    }\n  };\n\n  const increaseBreak = event => {\n    event.preventDefault();\n\n    if (breakDuration < 20) {\n      focusDuration += 1;\n    }\n  };\n\n  const decreaseBreak = event => {\n    event.preventDefault();\n\n    if (breakDuration > 1) {\n      focusDuration -= 1;\n    }\n  };\n\n  const stop = event => {\n    event.preventDefault();\n    setSession(null);\n    setIsTimerRunning(false);\n  };\n\n  function calculateTimeRemaining(time) {\n    let min = Math.floor(time / 60);\n    let sec = time % 60;\n    sec = sec < 10 ? \"0\" + sec : sec;\n    return min + \":\" + sec;\n  }\n\n  function calculateTime(time) {\n    return time + \":\" + 0 + 0;\n  }\n\n  const validateStopButton = () => {\n    if (session === null || session === void 0 ? void 0 : session.isTimerRunning) {\n      if ((session === null || session === void 0 ? void 0 : session.prevState) === null) {\n        return true;\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const showTime = () => {\n    if (isTimerRunning) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        \"data-testid\": \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, session === null || session === void 0 ? void 0 : session.label, \" for \", focusDuration, \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        \"data-testid\": \"session-sub-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, calculateTimeRemaining(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\",\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": calculatePercentage // TODO: Increase aria-valuenow as elapsed time increases\n        ,\n        style: {\n          width: calculatePercentage\n        } // TODO: Increase width % as elapsed time increases\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      })))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", calculateTime(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decreaseFocus,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increaseFocus,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", calculateTime(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decreaseBreak,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increaseBreak,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    onClick: stop,\n    title: \"Stop the session\",\n    disabled: validateStopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }))))), showTime);\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/benna/Desktop/Thinkful Homework/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","Audio","play","playPause","nextState","prevStateSession","calculatePercentage","decreaseFocus","event","preventDefault","increaseFocus","increaseBreak","decreaseBreak","stop","calculateTimeRemaining","time","min","floor","sec","calculateTime","validateStopButton","showTime","height","width","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  let focusDuration = 25;\n  let breakDuration = 5;\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      // will add the update here happens every second\n      setSession();\n      focusDuration = focusDuration;\n      breakDuration = breakDuration;\n      \n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  const calculatePercentage = () => {\n\n    if(session?.label === \"Focusing\"){\n      return session?.timeRemaining/(focusDuration*60);\n    }\n    else{\n      return session?.timeRemaining/(breakDuration*60);\n    }\n   \n\n  }\n\n  const decreaseFocus = (event) => {\n    event.preventDefault();\n    if(focusDuration > 5){\n      focusDuration -= 5;\n    }\n  }\n\n  const increaseFocus = (event) => {\n    event.preventDefault();\n    if(focusDuration < 60){\n      focusDuration += 5;\n    }\n  }\n\n  const increaseBreak = (event) => {\n    event.preventDefault();\n    if(breakDuration < 20){\n      focusDuration += 1;\n    }\n  }\n  \n  const decreaseBreak = (event) => {\n    event.preventDefault();\n    if(breakDuration > 1){\n      focusDuration -= 1;\n    }\n  }\n\n  const stop = (event) => {\n    event.preventDefault();\n\n    setSession(null);\n    setIsTimerRunning(false);\n  }\n\n  function calculateTimeRemaining (time) {\n    let min = Math.floor(time/60);\n    let sec = time%60;\n\n    sec = sec < 10 ? \"0\" + sec : sec;\n    \n    return min + \":\" + sec;\n  }\n\n  function calculateTime (time) {\n    return time + \":\" + 0 + 0;\n  }\n\n  const validateStopButton = () => {\n    if (session?.isTimerRunning){\n      if(session?.prevState === null) {\n        return true;\n      }\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  const showTime = () => {\n    if(isTimerRunning){\n      return (\n          <div>\n            {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            <div className=\"row mb-2\">\n              <div className=\"col\">\n                {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                <h2 data-testid=\"session-title\">\n                  {session?.label} for {focusDuration}:00 minutes                      \n                </h2>\n                {/* TODO: Update message below correctly format the time remaining in the current session */}\n                <p className=\"lead\" data-testid=\"session-sub-title\">\n                  {calculateTimeRemaining(session?.timeRemaining)} remaining\n                </p>\n              </div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col\">\n                <div className=\"progress\" style={{ height: \"20px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    aria-valuenow={calculatePercentage} // TODO: Increase aria-valuenow as elapsed time increases\n                    style={{ width: calculatePercentage }} // TODO: Increase width % as elapsed time increases\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {calculateTime(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                onClick={decreaseFocus}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                onClick={increaseFocus}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {calculateTime(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  onClick={decreaseBreak}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  onClick={increaseBreak}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              onClick={stop}\n              title=\"Stop the session\"\n              disabled={validateStopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      {showTime}\n    </div>\n  );\n}\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}